[tox]
envlist =
    clean
    lint
    py38
    report


[testenv]
isolated_build = true
wheel = true
wheel_build_env = clean
extras = test
whitelist_externals = mkdir
commands_pre = mkdir -p test-results


[testenv:clean]
description = clean up and set up the environment
commands = coverage erase


[testenv:py38]
depends = clean
commands =
    coverage run --omit 'src/**' -m pytest --junit-xml=test-results/pytest/results.xml '{envsitepackagesdir}/org/app'


[testenv:report]
depends = py38
commands =
    coverage html
    coverage report
    coverage xml


[testenv:lint]
commands =
    isort --check-only src
    pycodestyle src
    flake8 src


[tool:isort]
extra_standard_library = setuptools
force_to_top = setuptools
line_length = 120


[pycodestyle]
max-line-length = 120
statistics = true


[flake8]
max-line-length = 120


[mypy]
files = src/org
ignore_missing_imports = true
warn_unused_configs = true
strict = true
junit_xml = test-results/mypy/results.xml
html_report = mypy-html
pretty = true


[coverage:run]
source_pkgs =
    org.app


[coverage:xml]
output = coverage.xml


[coverage:paths]
source =
    ${TOX_ENV_DIR-src}/org/app
    src/org/app


[coverage:report]
exclude_lines =
    def __repr__
    if 0:
    if TYPE_CHECKING:
    if __name__ == .__main__.:
    if self.debug:
    if settings.DEBUG
    pragma: no cover
    raise AssertionError
    raise NotImplementedError
